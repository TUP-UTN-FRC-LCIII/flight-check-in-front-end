name: Angular Docker CI
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      api_url:
        description: 'Backend API URL'
        required: false
        default: 'http://flights:8080/'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set API URL
        run: |
          API_URL=${{ github.event.inputs.api_url || 'http://flights:8080/' }}
          echo "Using API URL: $API_URL"
          echo "API_URL=$API_URL" >> $GITHUB_ENV

      - name: Build Angular app for production
        run: npm run build:prod
        env:
          API_URL: ${{ env.API_URL }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/tup-utn-frc-lciii/flight-check-in-front-end
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=sha,format=short

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            ENVIRONMENT=production
            API_URL=${{ env.API_URL }}

      - name: Verify Docker image
        run: |
          docker pull ghcr.io/tup-utn-frc-lciii/flight-check-in-front-end:latest
          docker image inspect ghcr.io/tup-utn-frc-lciii/flight-check-in-front-end:latest
          echo "Configured API URL: ${{ env.API_URL }}"
          docker run --rm -e API_URL=${{ env.API_URL }} -e ENVIRONMENT=production ghcr.io/tup-utn-frc-lciii/flight-check-in-front-end:latest sh -c 'envsubst < /usr/share/nginx/html/env.js'
